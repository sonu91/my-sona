{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["columns","key","name","App","props","state","items","isLoaded","fetch","then","res","json","setState","catch","err","console","log","this","className","rows","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEMA,EAAU,CACd,CAAEC,IAAK,KAAMC,KAAM,MACnB,CAAED,IAAK,OAAQC,KAAM,QACrB,CAAED,IAAK,WAAYC,KAAM,YACzB,CAAED,IAAK,eAAgBC,KAAM,gBAC7B,CAAED,IAAK,SAAUC,KAAM,UACvB,CAAED,IAAK,aAAcC,KAAM,eAC3B,CAAED,IAAK,aAAcC,KAAM,gBAwEdC,E,kDAtDX,WAAYC,GAAQ,IAAD,8BAEf,cAAMA,IAEDC,MAAQ,CACTC,MAAO,GACPC,UAAU,GANC,E,qDAgBnB,WAAqB,IAAD,OAEhBC,MAAM,0CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKC,SAAS,CACVN,MAAOK,EACPJ,UAAU,OAEfM,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,oBAUxB,WAEI,MAA4BG,KAAKZ,MAAzBE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,MAElB,OAAKC,EAID,qBAAKW,UAAU,MAAf,SACY,cAAC,IAAD,CACAlB,QAASA,EACTmB,KAAMb,MANX,sE,GAjDDc,IAAMC,WCPTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84bc7536.chunk.js","sourcesContent":["import React from 'react';\nimport DataGrid from 'react-data-grid';\nconst columns = [\n  { key: 'id', name: 'ID' },\n  { key: 'name', name: 'Name' },\n  { key: 'customer', name: 'Customer' },\n  { key: 'productGroup', name: 'ProductGroup' },\n  { key: 'status', name: 'Status' },\n  { key: 'locationSE', name: 'Location SE' },\n  { key: 'locationTE', name: 'Location TE' }\n];\n\n\n\n/**\n * App\n *\n * Simple react js fetch example\n */\nclass App extends React.Component {\n\n    /**\n     * constructor\n     *\n     * @object  @props  parent props\n     * @object  @state  component state\n     */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            items: [],\n            isLoaded: false\n        }\n\n    }\n\n    /**\n     * componentDidMount\n     *\n     * Fetch json array of objects from given url and update state.\n     */\n    componentDidMount() {\n\n        fetch('http://10.215.241.161:8087/api/project') /* http://10.215.241.161:81/angapp/     http://10.215.241.161:8087/api/project*/\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    items: json,\n                    isLoaded: true, \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    /**\n     * render\n     *\n     * Render UI\n     */\n    render() {\n\n        const { isLoaded, items } = this.state;\n\n        if (!isLoaded)\n            return <div>Loading Trek Project Details...</div>;\n\n        return (\n            <div className=\"App\">\n                        <DataGrid                      \n                        columns={columns}\n                        rows={items}  />\n              </div>\n        );\n\n    }\n\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}